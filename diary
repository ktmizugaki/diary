#!/usr/bin/env perl
use lib 'lib';
use Plack::Builder;
use Mojolicious::Lite;
use Diary;

use constant DATA_TGZ => "tmp/data.tgz";
use constant LAST_POST => "tmp/last_post";

sub mtime {
    my ($path) = @_;
    return (stat($path))[9];
}

app->secrets(['diary']);
app->types->type('tgz' => ['application/x-gzip']);

helper index_years => sub {
    my $c = shift;
    Diary::years;
};

helper entries_for_year => sub {
    my $c = shift;
    Diary::entries(@_);
};

get '/' => sub {
    my $c = shift;
    $c->stash(year => undef);
    $c->render('index');
} => 'index';

any [qw/GET POST/] => '/post' => sub {
    my $c = shift;
    $c->stash(year => undef);
    my $v = $c->validation;
    $v->validator->add_check('is_date', \&Diary::is_date);
    $v->validator->add_check('is_time', \&Diary::is_time);
    if (lc $c->req->method eq 'post' &&  $v->has_data) {
        $v->required('date')->like(qr/\A\d{8}\z/)->check('is_date');
        $v->required('time')->like(qr/\A\d{4}\z/)->check('is_time');
        $v->required('text');
        unless ($v->has_error) {
            if (my $entry = Diary::post($v->param('date'), $v->param('time'), $v->param('text'))) {
                system("/bin/touch", LAST_POST);
                return $c->redirect_to('index');
            }
        }
    }
    my ($date, $time) = Diary::now;
    $c->param(date => $date) unless $c->param('date');
    $c->param(time => $time) unless $c->param('time');
    $c->param(text => "") unless $c->param('text');

    $c->render('post');
} => 'post';

get '/data.tgz' => [format => 0] => sub {
    my $c = shift;
    if (mtime(DATA_TGZ) < mtime(LAST_POST)) {
        system("/bin/tar", "zcf", DATA_TGZ, "data");
    }
    $c->reply->static("../".DATA_TGZ);
} => 'datatgz';

get '/:year' => [year => qr/\d{4}/] => sub {
    my $c = shift;
    my $year = $c->stash('year');
    return $c->render_not_found unless grep(/^$year$/, @{$c->index_years});
    $c->render('diary');
} => 'diary';

builder {
    enable "+MyRedirect";
    app->start;
}
